{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","rows","querySelectorAll","counterClick","prevSorted","addEventListener","e","index","target","cellIndex","data","children","sort","a","b","contentA","cells","textContent","contentB","localeCompare","parseInt","slice","append","el","row","closest","forEach","item","classList","remove","add","body","insertAdjacentHTML","pushNotification","posTop","posRight","title","description","type","setTimeout","form","errorPhrase","successPhrase","preventDefault","FormData","objData","Object","fromEntries","entries","personName","name","position","office","age","salary","key","length","numFormat","money","Intl","NumberFormat","format","getElementById","reset"],"mappings":"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","file":"main.a25bb867.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = tbody.querySelectorAll('tr');\n\nlet counterClick = 0;\nlet prevSorted = '';\n\nthead.addEventListener('click', (e) => {\n  const index = e.target.cellIndex;\n  const data = [...tbody.children];\n\n  if (prevSorted === e.target) {\n    counterClick++;\n  } else {\n    counterClick = 0;\n  }\n\n  data.sort((a, b) => {\n    const contentA = counterClick % 2 === 0\n      ? a.cells[index].textContent\n      : b.cells[index].textContent;\n    const contentB = counterClick % 2 === 0\n      ? b.cells[index].textContent\n      : a.cells[index].textContent;\n\n    switch (index) {\n      case 0 :\n      case 1 :\n      case 2 : return contentA.localeCompare(contentB);\n\n      case 3 : return contentA - contentB;\n\n      case 4 : return parseInt(contentA.slice(1)) - parseInt(contentB.slice(1));\n    }\n  });\n  tbody.append(...data);\n\n  prevSorted = e.target;\n});\n\ntbody.addEventListener('click', (el) => {\n  const row = el.target.closest('tr');\n\n  rows.forEach(item => item.classList.remove('active'));\n\n  row.classList.add('active');\n});\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form action=\"/\" method=\"POST\" class=\"new-employee-form\" id=\"form\">\n    <label>\n      Name:\n      <input type=\"text\" name=\"name\" data-qa=\"name\">\n    </label>\n    <label>\n      Position:\n      <input type=\"text\" name=\"position\" data-qa=\"position\">\n    </label>\n    <label>\n      Office:\n      <select type=\"select\" name=\"office\" data-qa=\"office\" required>\n        <option disabled selected>Choose the city</option>\n        <option>Tokyo</option>\n        <option>Singapore</option>\n        <option>London</option>\n        <option>New York</option>\n        <option>Edinburgh</option>\n        <option>San Francisco</option>\n      </select>\n    </label>\n    <label>\n      Age:\n      <input type=\"number\" name=\"age\" data-qa=\"age\">\n    </label>\n    <label>\n      Salary:\n      <input type=\"number\" name=\"salary\" data-qa=\"salary\" required>\n    </label>\n    <button>\n      Save to table\n    </button>\n  </form>\n`);\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  document.body.insertAdjacentHTML('afterbegin', `\n    <div class=\"notification\n      ${type}\" style=\"top:${posTop}px;\n       right:${posRight}px;\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    </div>\n  `);\n\n  setTimeout(() => document.querySelector('div').remove(), 2000);\n};\n\nconst form = document.querySelector('form');\nconst errorPhrase = 'Ooops... try again! Enter valid data';\nconst successPhrase = `New person added`;\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const objData = Object.fromEntries(data.entries());\n\n  const { name: personName, position, office, age, salary } = objData;\n\n  for (const key in objData) {\n    if (objData[key] === '') {\n      pushNotification(580, 10, errorPhrase,\n        'please, fill the all forms', 'error');\n\n      return;\n    }\n  };\n\n  if (personName.length < 4) {\n    pushNotification(580, 10, errorPhrase,\n      `Name should be more than 4 letters,\n      please fill the form with correct values`,\n      'error');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    pushNotification(580, 10, errorPhrase,\n      `The age of employee should be more than 18\n      or under than 90 years old`, 'error');\n\n    return;\n  }\n\n  if (!office) {\n    pushNotification(580, 10, errorPhrase,\n      `Choose the office`, 'error');\n\n    return;\n  }\n\n  pushNotification(580, 10, successPhrase,\n    `Your employee has successfully added`, 'success');\n\n  const numFormat = new Intl.NumberFormat('en-US');\n  const money = numFormat.format(salary);\n\n  tbody.insertAdjacentHTML('beforeend', `\n  <tr>\n    <td>${personName}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${money}</td>\n  </tr>\n  `);\n\n  document.getElementById('form').reset();\n});\n"]}